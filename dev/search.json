[{"path":"https://fukayak.github.io/occumb/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Keiichi Fukaya Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fukayak.github.io/occumb/dev/articles/model_specification.html","id":"modeling-the-sequential-sampling-process-of-edna-metabarcoding","dir":"Articles","previous_headings":"","what":"Modeling the sequential sampling process of eDNA metabarcoding","title":"Model specification in occumb()","text":"assume occurrence focal species monitored J sites sampled area interest. site j, K[j] replicates environmental samples collected. replicate, library DNA sequencing prepared obtain separate sequence reads replicate. denote resulting sequence read counts species replicate k site j, obtained using high-throughput sequencing subsequent bioinformatic processing, y[, j, k]. Adapted Figure 1 Fukaya et al. 2022 (CC 4.0) figure shows diagram minimal model can fitted occumb() default settings. process generating y represented series latent variables z, u, r, parameters psi, theta, phi govern variation latent variables. Although psi, theta, phi assumed species-specific values, modeling parameters functions covariates allows variation (see following section). First, look right-pointing arrow left, representing ecological process species distribution. DNA sequence species detected site, site must occupied species (.e., species’ environmental DNA must present site). model, site occupancy species indicated latent variable z[, j]. site j occupied species , z[, j] = 1; otherwise, z[, j] = 0. psi[] represents probability species occupies site selected region interest. Thus, species high psi[] values occur many sites region, species low psi[] values occur limited number sites. Next, focus second right-pointing arrow left, represents one two observation processes, capture species DNA sequence. DNA sequence species detected, environmental sample collected occupied site (.e., z[, j] = 1) must contain species eDNA amplicon derived must present prepared sequencing library. model, inclusion DNA sequence species sequencing library indicated latent variable u[, j, k]. library replicate k site j contains DNA sequence species , u[, j, k] = 1; otherwise, u[, j, k] = 0. theta[] represents probability DNA sequence species captured per replicate collected site occupied species. DNA sequences species high theta[] values reliably captured occupied sites, DNA sequences species low theta[] values difficult capture. Note u[, j, k] always takes zero sites occupied species (.e., z[, j] = 0), assuming false positives occur. Finally, look right-pointing arrow right side. model part represents another observation process, allocation species sequence reads high-throughput sequencing. , sequence read count vector y[1:, j, k] assumed follow multinomial distribution total number sequence reads replicate k site j number trials. multinomial cell probability, pi[1:, j, k] (shown figure), modeled function latent variables u[1:, j, k] described r[1:, j, k] proportional relative frequency species sequence reads. variation r[, j, k] governed parameter phi[], represents relative dominance species sequence. Species higher phi[] values tend relatively reads species sequence included library (.e. u[, j, k] = 1), species lower phi[] values tend relatively fewer reads. false positives assumed occur stage, ; , pi[, j, k] always takes zero replicates include species DNA sequence (.e., u[, j, k] = 0). figure, arrows directed psi[], theta[], phi[] indicate variation parameters governed community-level multivariate normal prior distribution mean Mu covariance matrix Sigma. Details discussed .","code":""},{"path":"https://fukayak.github.io/occumb/dev/articles/model_specification.html","id":"covariate-modeling-of-psi-theta-and-phi","dir":"Articles","previous_headings":"","what":"Covariate modeling of psi, theta, and phi","title":"Model specification in occumb()","text":"variabilition psi, theta, phi can modeled function covariates manner similar generalized linear models (GLMs) generalized linear mixed models (GLMMs). , covariates incorporated linear predictors appropriate link scales parameters (logit psi theta log phi). occumb() function allows covariate modeling using standard R formula syntax. three types related covariates: species covariates can take different values species (e.g., traits), site covariates can take different values site (e.g., environment), replicate covariates can take different values combination site replicate (e.g., amount water filtered). covariates can included data object via spec_cov, site_cov, repl_cov arguments occumbData() function used specify models occumb() function. occumb() function specifies covariates parameter using formula_<parameter name> formula_<parameter name>_shared arguments. formula_<parameter name> formula_<parameter name>_shared arguments used specify species-specific effects effects shared species, respectively. following table shows examples modeling psi using formula_psi formula_psi_shared arguments species index, j site index, speccov1 continuous species covariate, sitecov1 sitecov2 continuous site covariates. psi can modeled function species site covariates. occumb(), species-specific effects psi denoted gamma, shared effects psi denoted gamma_shared. first case specifies default, intercept-model. logit(psi[]) therefore determined intercept term gamma[, 1]. Note occumb() always estimates species-specific intercept gamma[, 1], simplest case. second case, species-specific effects gamma[, 2] site covariate sitecov1 incorporated. Note site subscript j added psi left-hand side equation value psi now varies site site depending value sitecov1[j]. third fourth cases, another site covariate, sitecov2, specified addition sitecov1. shown fourth case, interaction terms can specified using * operator. fifth case, formula_psi_shared argument specifies shared effect species covariate speccov1. Note effect gamma_shared[1] speccov1[] linear predictor subscript . species-specific effects estimated species covariates, occumb() accepts species covariates interactions formula_<parameter name>_shared argument. Introducing species covariates change dimension psi (note subscript ) may help reveal variations site occupancy probability associated species characteristics. sixth case, site covariate sitecov1 specified formula_psi_shared argument. contrast second case, sitecov1[j] shared effect gamma_shared[1] linear predictor. Since species often expected respond differently site characteristics, site covariates likely introduced using formula_psi argument. Nevertheless, formula_psi_shared argument can used assuming consistent covariate effects across species reasonable data support . similar approach can applied theta phi, can modeled function species, site, replicate covariates. following table shows examples modeling theta species index, j site index, k replicate index, speccov1 continuous species covariate, sitecov1 continuous site covariate, replcov1 continuous replicate covariate. occumb(), species-specific effects theta denoted beta, shared effects theta denoted beta_shared. first case specifies intercept-model. case psi, occumb() always estimates species-specific intercept beta[, 1]. second third cases can contrasted second case psi example single covariate specified formula_psi argument, remaining cases fifth sixth cases psi example single covariate specified formula_psi_shared argument. replicate covariate replcov1 site index j replicate index k, specifying adds two indexes theta. rule applies phi. example complex cases involving interactions different types covariates. occumb(), species-specific effects phi denoted alpha, shared effects phi denoted alpha_shared. two parameters, occumb() always estimates species-specific intercept alpha[, 1].","code":""},{"path":"https://fukayak.github.io/occumb/dev/articles/model_specification.html","id":"prior-distributions","dir":"Articles","previous_headings":"","what":"Prior distributions","title":"Model specification in occumb()","text":"hierarchical prior distribution specified species-specific effects alpha, beta, gamma. Specifically, vector effects assumed follow multivariate normal distribution, prior distribution specified elements mean vector Mu covariance matrix Sigma whose values estimated data. hyperparameters summarize variation species-specific effects community level, estimates may interest. normal prior distribution mean 0 precision prior_prec specified element Mu. prior_prec value determined prior_prec argument occumb() function, default set small value 1e-4 specify vague priors. Note precision inverse variance. Sigma decomposed elements standard deviation sigma correlation coefficient rho, specified different vague prior. Specifically, uniform prior distribution lower limit 0 upper limit prior_ulim specified sigma, uniform prior lower limit −1 upper limit 1 set rho. value prior_ulim determined prior_ulim argument occumb() function set 1e4 default. shared effects alpha_shared, beta_shared, gamma_shared, normal prior distribution mean 0 precision prior_prec specified.","code":""},{"path":"https://fukayak.github.io/occumb/dev/articles/model_specification.html","id":"after-all-which-are-the-relevant-parameters","dir":"Articles","previous_headings":"","what":"After all, which are the relevant parameters?","title":"Model specification in occumb()","text":"latent variables parameters model estimated saved using occumb() function follows (note occumb() save u r, function pi). Posterior samples latent variables parameters can accessed using get_post_samples() get_post_summary() functions. z Site occupancy status species. pi Multinomial probabilities species sequence read counts. phi Sequence relative dominance species. theta Sequence capture probabilities species. psi Site occupancy probabilities species. alpha Species-specific effects sequence relative dominance (phi). beta Species-specific effects sequence capture probabilities (theta). gamma Species-specific effects site occupancy probabilities (psi). alpha_shared Effects sequence relative dominance (phi) common across species. beta_shared Effects sequence capture probabilities (theta) common across species. gamma_shared Effects site occupancy probabilities (psi) common across species. Mu Community-level averages species-specific effects (alpha, beta, gamma). sigma Standard deviations species-specific effects (alpha, beta, gamma). rho Correlation coefficients species-specific effects (alpha, beta, gamma).","code":""},{"path":"https://fukayak.github.io/occumb/dev/articles/occumb.html","id":"prepare-dataset","dir":"Articles","previous_headings":"","what":"Prepare dataset","title":"Introduction to occumb","text":"use package’s built-data fish (see ?fish documentation) see analyze sequence count data occumb package. summary() function can used display overview dataset. Note summary sequence read count data found first block output. shows data obtained samples 50 sites \\(\\times\\) () 3 replicates, 50 fish species recorded. summary missing samples, number replicates per site, sequencing depth (.e., total number sequence reads per sample) also presented. second block output indicates fish data also two covariates, one continuous species covariate, mismatch, one discrete site covariate, riverbank, can used following analysis. third block output shows labels given 50 species, 50 sites, three replicates. , fish data brings together set data relevant analysis occumb package. analyzing dataset, can use occumbData() set data object. want display entire data, just type fish.","code":"data(fish) summary(fish) #> Sequence read counts:  #>  Number of species, I = 50  #>  Number of sites, J = 50  #>  Maximum number of replicates per site, K = 3  #>  Number of missing observations = 6  #>  Number of replicates per site: 2.88 (average), 0.33 (sd) #>  Sequencing depth: 77910 (average), 98034.7 (sd) #>  #> Species covariates:  #>  mismatch (continuous)  #> Site covariates:  #>  riverbank (categorical)  #> Replicate covariates:  #>  (None)  #>  #> Labels for species:  #>  Abbottina rivularis, Acanthogobius lactipes, Acheilognathus macropterus, Acheilognathus rhombeus, Anguilla japonica, Biwia zezera, Carassius cuvieri, Carassius spp., Channa argus, Ctenopharyngodon idella, Cyprinus carpio, Gambusia affinis, Gnathopogon spp., Gymnogobius castaneus, Gymnogobius petschiliensis, Gymnogobius urotaenia, Hemibarbus spp., Hypomesus nipponensis, Hypophthalmichthys spp., Hyporhamphus intermedius, Ictalurus punctatus, Ischikauia steenackeri, Lepomis macrochirus macrochirus, Leucopsarion petersii, Megalobrama amblycephala, Micropterus dolomieu dolomieu, Micropterus salmoides, Misgurnus spp., Monopterus albus, Mugil cephalus cephalus, Mylopharyngodon piceus, Nipponocypris sieboldii, Nipponocypris temminckii, Opsariichthys platypus, Opsariichthys uncirostris uncirostris, Oryzias latipes, Plecoglossus altivelis altivelis, Pseudogobio spp., Pseudorasbora parva, Rhinogobius spp., Rhodeus ocellatus ocellatus, Salangichthys microdon, Sarcocheilichthys variegatus microoculus, Silurus asotus, Squalidus chankaensis biwae, Tachysurus tokiensis, Tanakia lanceolata, Tribolodon brandtii maruta, Tribolodon hakonensis, Tridentiger spp.  #> Labels for sites:  #>  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50  #> Labels for replicates:  #>  L, C, R fish # Result not shown"},{"path":"https://fukayak.github.io/occumb/dev/articles/occumb.html","id":"fit-models","dir":"Articles","previous_headings":"","what":"Fit models","title":"Introduction to occumb","text":"fish dataset (dataset constructed occumbData()), can fit multispecies site occupancy model eDNA metabarcoding using occumb() function fits model fully Bayesian approach via Markov Chain Monte Carlo (MCMC) method implemented JAGS. occumb() several arguments accept model formulas fit different model variants using usual R formula syntax. See vignette(\"model_specification\") overview models occumb() can fit details specify models. Fitting null model (.e., intercept-model, though value intercept species-specific) simple, follows. Setting parallel = TRUE recommended faster model fitting parallel computation. model incorporating species site covariates fish dataset can fitted, example, follows. , riverbank specified covariate site occupancy probability (psi) formula_psi argument mismatch covariate relative dominance sequence (phi) formula_phi_shared argument. latter, since mismatch species covariate, formula_phi_shared argument used instead formula_phi effect mismatch constant across species; see vignette(\"model_specification\") details. two model fits can take approximately one hour. Given occumb() fits class complex hierarchical models many parameters unknown variables, may require, depending dataset size, long time /lot memory model fitting. occumb() also several arguments control MCMC computation fitting model. example, obtain precise posterior estimates example , can explicitly set n.iter n.thin arguments get longer less autocorrelated MCMC samples.","code":"fit0 <- occumb(data = fish, parallel = TRUE) fit1 <- occumb(formula_psi = ~ riverbank,                formula_phi_shared = ~ mismatch,                data = fish,                parallel = TRUE) fit1x <- occumb(formula_psi = ~ riverbank,                 formula_phi_shared = ~ mismatch,                 data = fish,                 n.thin = 20,                 n.iter = 40000,                 parallel = TRUE)"},{"path":"https://fukayak.github.io/occumb/dev/articles/occumb.html","id":"check-posterior-samples","dir":"Articles","previous_headings":"","what":"Check posterior samples","title":"Introduction to occumb","text":"fit1 object, look access diagnose posterior sample obtained using occumb(). Just enter object name fit1 displays summary MCMC results, including table posterior estimates saved parameter. plot() function draws trace plot density plot parameter.  Users used jagsUI package familiar output operations. Model fitting occumb() relies functions provided jagsUI package, operations respectively apply print plot methods jagsUI objects. summary() function provides high-level summary result. based summary method jagsUI objects modified occumb() output, displays data summary, model equations, MCMC settings, quick overview convergence relevant model parameters. Overall, model far convergence, convergence phi alpha, parameters related relative dominance species sequence reads, good (.e., high values Rhat); hence, longer MCMC runs required formal inference. want access posterior samples individual parameters summaries, can use get_post_samples() get_post_summary() functions. may require understanding model parameters names: see vignette(\"model_specification\") details. example, try get posterior summary site occupancy probability psi using get_post_summary() function. fit1 model, psi assumed different values site depending riverbank covariate. Therefore, psi estimated 50 species \\(\\times\\) 50 sites (note psi differs species default), two subscripts parentheses distinguish . , species site parameter psi[1,1]? psi[2,1]? Information dimension parameter given attributes resulting object. Thus, $dimension attribute, know first subscript psi represents species second site. $label attribute, know psi[1,1] represents value psi Abbottina rivularis site 1, psi[2,1] represents value psi Acanthogobius lactipes site 1. also look posterior summary effect term gamma psi. gamma two effect values species: intercept (Intercept) effect absence vegetation riverbank riverbankwithout_vegetation. Displaying summary, see , many species, absence vegetation negative effect psi (link scale). Next, access posterior samples psi using get_post_samples() function. resulting object post_sample_psi 3-dimensional array containing posterior sample psi. Information dimensions extracted sample given attributes. Thus, second dimension post_sample_psi corresponds species third site. labels species sites indicate post_sample_psi[, 1, 1] contains posterior sample psi Abbottina rivularis site 1.","code":"fit1 # Result not shown plot(fit1) summary(fit1) #> Summary for an occumbFit object  #>  #> Summary of data: #>  Number of species, I = 50  #>  Number of sites, J = 50  #>  Maximum number of replicates per site, K = 3  #>  Number of missing observations = 6  #>  Number of replicates per site: 2.88 (average), 0.33 (sd)  #>  Sequencing depth: 77910 (average), 98034.7 (sd)  #>  #> Model specification: #>  formula_phi:          ~ 1  #>  formula_theta:        ~ 1  #>  formula_psi:          ~ riverbank  #>  formula_phi_shared:   ~ mismatch  #>  formula_theta_shared: ~ 1  #>  formula_psi_shared:   ~ 1  #>  prior_prec:           1e-04  #>  prior_ulim:           10000  #>  #> Saved parameters: #>  Mu sigma rho alpha beta gamma alpha_shared phi theta psi z pi deviance  #>  #> MCMC ran in parallel for 46.39 minutes at time 2023-07-13 15:44:34.56973: #>  For each of 4 chains: #>   Adaptation:            100 iterations (sufficient) #>   Burn-in:               10000 iterations #>   Thin rate:             10 iterations #>   Total chain length:    20100 iterations #>   Posterior sample size: 1000 draws #>  #> Summary of posterior samples:  #>  Mu:  #>   Number of parameters: 4  #>   Rhat:  1.001 (min), 1.008 (median), 1.046 (mean), 1.168 (max)  #>   n.eff: 20 (min), 378 (median), 814.2 (mean), 2481 (max)  #>  sigma:  #>   Number of parameters: 4  #>   Rhat:  1.011 (min), 1.046 (median), 1.046 (mean), 1.081 (max)  #>   n.eff: 37 (min), 141.5 (median), 167 (mean), 348 (max)  #>  rho:  #>   Number of parameters: 16  #>   Rhat:  1 (min), 1.001 (median), 1.028 (mean), 1.222 (max)  #>   n.eff: 17 (min), 1772 (median), 2039.5 (mean), 4000 (max)  #>  alpha:  #>   Number of parameters: 50  #>   Rhat:  1.008 (min), 1.158 (median), 1.205 (mean), 2.248 (max)  #>   n.eff: 6 (min), 23.5 (median), 48.6 (mean), 466 (max)  #>  beta:  #>   Number of parameters: 50  #>   Rhat:  1.002 (min), 1.02 (median), 1.029 (mean), 1.117 (max)  #>   n.eff: 36 (min), 160 (median), 269.2 (mean), 1768 (max)  #>  gamma:  #>   Number of parameters: 100  #>   Rhat:  1 (min), 1.005 (median), 1.007 (mean), 1.062 (max)  #>   n.eff: 51 (min), 599.5 (median), 950 (mean), 4000 (max)  #>  alpha_shared:  #>   Number of parameters: 1  #>   Rhat:  1.402  #>   n.eff: 11  #>  phi:  #>   Number of parameters: 50  #>   Rhat:  1.002 (min), 1.053 (median), 1.158 (mean), 2.5 (max)  #>   n.eff: 5 (min), 54 (median), 167.1 (mean), 4000 (max)  #>  theta:  #>   Number of parameters: 50  #>   Rhat:  1.002 (min), 1.018 (median), 1.024 (mean), 1.084 (max)  #>   n.eff: 39 (min), 173 (median), 273.2 (mean), 1820 (max)  #>  psi:  #>   Number of parameters: 2500  #>   Rhat:  1 (min), 1.003 (median), 1.006 (mean), 1.047 (max)  #>   n.eff: 65 (min), 894 (median), 1401.7 (mean), 4000 (max)  #>  z:  #>   Number of parameters: 2500  #>   Rhat:  1 (min), 1.005 (median), 1.009 (mean), 1.099 (max), 946 (Number of NAs)  #>   n.eff: 1 (min), 1220 (median), 1665.4 (mean), 4000 (max)  #>  pi:  #>   Number of parameters: 7500  #>   Rhat:  1 (min), 1.077 (median), 1.1 (mean), 1.293 (max), 28 (Number of NAs)  #>   n.eff: 1 (min), 1 (median), 1016.5 (mean), 4000 (max)  #>  deviance:  #>   Rhat:  1.001  #>   n.eff: 3259  #>  #> **WARNING** Rhat values indicate convergence failure (Rhat > 1.1).  #>  #> DIC info: (pD = var(deviance)/2) #>  pD = 2152.9 and DIC = 19993.73 post_summary_psi <- get_post_summary(fit1, \"psi\") post_summary_psi #>                  mean          sd        2.5%        25%        50%        75%      97.5%     Rhat n.eff overlap0 f #> psi[1,1]   0.64607375 0.083034133 0.466158634 0.59382744 0.65078275 0.70478301 0.79318634 1.001697  1264        0 1 #> psi[2,1]   0.28250539 0.089275014 0.136970706 0.21789079 0.27480943 0.33672122 0.47971573 1.013796   317        0 1 #> psi[3,1]   0.38321762 0.088583160 0.218908875 0.32150169 0.38055944 0.44171514 0.56510758 1.005127   472        0 1 #> psi[4,1]   0.16899696 0.070833671 0.058363836 0.11684541 0.15943020 0.21075828 0.32821669 1.001143  3788        0 1 #> psi[5,1]   0.20435372 0.088327893 0.069729103 0.13950376 0.19315615 0.25286705 0.41681236 1.006308   596        0 1 #> psi[6,1]   0.10737782 0.061179251 0.024299550 0.06246265 0.09573034 0.13925811 0.25577838 1.002291  1418        0 1 #> psi[7,1]   0.84639119 0.053478041 0.730770215 0.81327035 0.85048238 0.88494478 0.93751979 1.003575   654        0 1 #> psi[8,1]   0.94296846 0.028288919 0.875373936 0.92739641 0.94770976 0.96354354 0.98337253 1.002581  1006        0 1 #> (Omitted the remaining) attributes(post_summary_psi)$dimension #> [1] \"Species\" \"Site\" attributes(post_summary_psi)$label #> $Species #>  [1] \"Abbottina rivularis\"                      #>  [2] \"Acanthogobius lactipes\"                   #>  [3] \"Acheilognathus macropterus\"               #>  [4] \"Acheilognathus rhombeus\"                  #>  [5] \"Anguilla japonica\"                        #>  [6] \"Biwia zezera\"                             #>  [7] \"Carassius cuvieri\"                        #>  [8] \"Carassius spp.\"                           #>  [9] \"Channa argus\"                             #> [10] \"Ctenopharyngodon idella\"                  #> [11] \"Cyprinus carpio\"                          #> [12] \"Gambusia affinis\"                         #> [13] \"Gnathopogon spp.\"                         #> [14] \"Gymnogobius castaneus\"                    #> [15] \"Gymnogobius petschiliensis\"               #> [16] \"Gymnogobius urotaenia\"                    #> [17] \"Hemibarbus spp.\"                          #> [18] \"Hypomesus nipponensis\"                    #> [19] \"Hypophthalmichthys spp.\"                  #> [20] \"Hyporhamphus intermedius\"                 #> [21] \"Ictalurus punctatus\"                      #> [22] \"Ischikauia steenackeri\"                   #> [23] \"Lepomis macrochirus macrochirus\"          #> [24] \"Leucopsarion petersii\"                    #> [25] \"Megalobrama amblycephala\"                 #> [26] \"Micropterus dolomieu dolomieu\"            #> [27] \"Micropterus salmoides\"                    #> [28] \"Misgurnus spp.\"                           #> [29] \"Monopterus albus\"                         #> [30] \"Mugil cephalus cephalus\"                  #> [31] \"Mylopharyngodon piceus\"                   #> [32] \"Nipponocypris sieboldii\"                  #> [33] \"Nipponocypris temminckii\"                 #> [34] \"Opsariichthys platypus\"                   #> [35] \"Opsariichthys uncirostris uncirostris\"    #> [36] \"Oryzias latipes\"                          #> [37] \"Plecoglossus altivelis altivelis\"         #> [38] \"Pseudogobio spp.\"                         #> [39] \"Pseudorasbora parva\"                      #> [40] \"Rhinogobius spp.\"                         #> [41] \"Rhodeus ocellatus ocellatus\"              #> [42] \"Salangichthys microdon\"                   #> [43] \"Sarcocheilichthys variegatus microoculus\" #> [44] \"Silurus asotus\"                           #> [45] \"Squalidus chankaensis biwae\"              #> [46] \"Tachysurus tokiensis\"                     #> [47] \"Tanakia lanceolata\"                       #> [48] \"Tribolodon brandtii maruta\"               #> [49] \"Tribolodon hakonensis\"                    #> [50] \"Tridentiger spp.\"                         #>  #> $Site #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" #> [16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" #> [31] \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\" \"44\" \"45\" #> [46] \"46\" \"47\" \"48\" \"49\" \"50\" post_summary_gamma <- get_post_summary(fit1, \"gamma\") attributes(post_summary_gamma)$dimension #> [1] \"Species\" \"Effects\" attributes(post_summary_gamma)$label$Effects #> [1] \"(Intercept)\"                 \"riverbankwithout_vegetation\" post_summary_gamma #>                    mean        sd       2.5%          25%         50%         75%        97.5%      Rhat n.eff overlap0       f #> (Omitted the beginning) #> gamma[1,2]  -0.68135951 0.4102181 -1.4106885 -0.964385346 -0.71198673 -0.41908665  0.197784615 1.0031831   720        1 0.93875 #> gamma[2,2]  -0.57124068 0.4861383 -1.4368696 -0.906331725 -0.60645174 -0.27472631  0.480190462 1.0141750   414        1 0.87925 #> gamma[3,2]  -1.07479024 0.4260032 -1.9550037 -1.336688784 -1.07308990 -0.80888005 -0.213626578 1.0040679   632        0 0.99250 #> gamma[4,2]  -0.96563859 0.5007208 -1.9760743 -1.276917710 -0.95208744 -0.64960250  0.016721077 1.0020286  1835        1 0.97225 #> gamma[5,2]  -1.01038376 0.5436033 -2.1340409 -1.339282006 -0.98783592 -0.65193007  0.006887964 1.0148153   190        1 0.97400 #> gamma[6,2]  -0.96443244 0.5694898 -2.1291123 -1.307706597 -0.96394933 -0.62099851  0.205483803 1.0043719   989        1 0.95325 #> gamma[7,2]  -1.44522243 0.4356167 -2.4011743 -1.721131931 -1.39965212 -1.14153735 -0.689367497 1.0021543  1065        0 0.99925 #> gamma[8,2]  -1.36146823 0.4820477 -2.3661876 -1.654265660 -1.32819584 -1.04709249 -0.483307820 1.0014346  1791        0 0.99900 #> (Omitted the remaining) post_sample_psi <- get_post_samples(fit1, \"psi\") dim(post_sample_psi) #> [1] 4000   50   50 attributes(post_sample_psi) #> $dim #> [1] 4000   50   50 #>  #> $dimension #> [1] \"Sample\"  \"Species\" \"Site\"    #>  #> $label #> $label$Sample #> NULL #>  #> $label$Species #>  [1] \"Abbottina rivularis\"                      #>  [2] \"Acanthogobius lactipes\"                   #>  [3] \"Acheilognathus macropterus\"               #>  [4] \"Acheilognathus rhombeus\"                  #>  [5] \"Anguilla japonica\"                        #>  [6] \"Biwia zezera\"                             #>  [7] \"Carassius cuvieri\"                        #>  [8] \"Carassius spp.\"                           #>  [9] \"Channa argus\"                             #> [10] \"Ctenopharyngodon idella\"                  #> [11] \"Cyprinus carpio\"                          #> [12] \"Gambusia affinis\"                         #> [13] \"Gnathopogon spp.\"                         #> [14] \"Gymnogobius castaneus\"                    #> [15] \"Gymnogobius petschiliensis\"               #> [16] \"Gymnogobius urotaenia\"                    #> [17] \"Hemibarbus spp.\"                          #> [18] \"Hypomesus nipponensis\"                    #> [19] \"Hypophthalmichthys spp.\"                  #> [20] \"Hyporhamphus intermedius\"                 #> [21] \"Ictalurus punctatus\"                      #> [22] \"Ischikauia steenackeri\"                   #> [23] \"Lepomis macrochirus macrochirus\"          #> [24] \"Leucopsarion petersii\"                    #> [25] \"Megalobrama amblycephala\"                 #> [26] \"Micropterus dolomieu dolomieu\"            #> [27] \"Micropterus salmoides\"                    #> [28] \"Misgurnus spp.\"                           #> [29] \"Monopterus albus\"                         #> [30] \"Mugil cephalus cephalus\"                  #> [31] \"Mylopharyngodon piceus\"                   #> [32] \"Nipponocypris sieboldii\"                  #> [33] \"Nipponocypris temminckii\"                 #> [34] \"Opsariichthys platypus\"                   #> [35] \"Opsariichthys uncirostris uncirostris\"    #> [36] \"Oryzias latipes\"                          #> [37] \"Plecoglossus altivelis altivelis\"         #> [38] \"Pseudogobio spp.\"                         #> [39] \"Pseudorasbora parva\"                      #> [40] \"Rhinogobius spp.\"                         #> [41] \"Rhodeus ocellatus ocellatus\"              #> [42] \"Salangichthys microdon\"                   #> [43] \"Sarcocheilichthys variegatus microoculus\" #> [44] \"Silurus asotus\"                           #> [45] \"Squalidus chankaensis biwae\"              #> [46] \"Tachysurus tokiensis\"                     #> [47] \"Tanakia lanceolata\"                       #> [48] \"Tribolodon brandtii maruta\"               #> [49] \"Tribolodon hakonensis\"                    #> [50] \"Tridentiger spp.\"                         #>  #> $label$Site #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" #> [16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" #> [31] \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\" \"44\" \"45\" #> [46] \"46\" \"47\" \"48\" \"49\" \"50\" post_sample_psi[, 1, 1] #>  [1] 0.6673664 0.7505735 0.6416083 0.7011978 0.5935338 0.6087940 0.6159829 #>  [8] 0.7758206 0.6710466 0.7423708 0.6244308 0.6237291 0.6344345 0.6715390 #> [15] 0.6255393 0.7306071 0.6781538 0.7391794 0.6678208 0.6715868 0.7582302 #> [22] 0.5947020 0.4880676 0.6958859 0.6202520 0.5487584 0.6781225 0.7073072 #> (Omitted the remaining)"},{"path":"https://fukayak.github.io/occumb/dev/articles/occumb.html","id":"assess-goodness-of-fit","dir":"Articles","previous_headings":"","what":"Assess goodness-of-fit","title":"Introduction to occumb","text":"Assessing goodness--fit fitted model essential step data analysis based statistical models. goodness--fit models fitted occumb() can evaluated using gof() function computes Bayesian p-value via posterior predictive check approach. recommended specify cores argument explicitly parallel computation. default, gof() function outputs scatter plot fit statistics (case, default Freeman-Tukey statistics). see summary result, just enter name resulting object. moderate p-value indicates lack evidence model’s inadequacy fitting. plot() function can used (re)draw scatter plot fit statistics resulting object.","code":"gof_result <- gof(fit1, cores = 4) gof_result #> Posterior predictive check for an occumbFit object: #>  Statistics: Freeman-Tukey  #>  p-value:    0.2005  #>  Discrepancy statistics for observed data:   542.81 (mean), 17.92 (sd)  #>  Discrepancy statistics for replicated data: 523.28 (mean), 16.47 (sd) plot(gof_result)"},{"path":"https://fukayak.github.io/occumb/dev/articles/occumb.html","id":"analyze-study-design","dir":"Articles","previous_headings":"","what":"Analyze study design","title":"Introduction to occumb","text":"model fitted occumb() can used find eDNA metabarcoding study designs effectively detect species present. many sites, within-site replicates, sequencing depth required ensure reliable species detection? best balance number sites visited, number within-site replicates, sequencing depth limited budget? multispecies site occupancy model fit occumb() answers questions predicting number species expected detected specific study designs. eval_util_L() eval_util_R() functions available purposes. two functions assume species diversity assessment different spatial scales (.e., former local (L), latter regional (R)). Specifically, eval_util_L() appropriate interested assessing species diversity study sites included dataset, eval_util_R() appropriate interested assessing species diversity broader area includes study sites dataset (.e., population sites “metacommunity”). context fish dataset, eval_util_L() evaluates expected number species detected per site 50 sites dataset different combinations number replicates sequencing depth. example, following give expected number species detected per site (referred Utility ) number replicates K sequencing depth N take values (1, 2, 3) (1000, 10000, 100000), respectively. Note recommended specify cores argument explicitly parallel computation. cost per sequence read high-throughput sequencing, cost per replicate library preparation, research budget values known, list_cond_L() function can used obtain set feasible settings cost budget values. can given eval_util_L() identify optimal study design budget constraint. Hence, specific budget cost value, best K = 3 replicates per site effective species detection. contrast eval_util_L(), eval_util_R() considers differences number sites visited. Nevertheless, eval_util_R() can applied much way eval_util_L(). eval_util_R(), Utility number species expected detected region interest settings number sites J, number replicates K, sequencing depth N. Since list_cond_R() may return huge list possible settings, may want get manually restricted list using J /K arguments.","code":"utilL1 <- eval_util_L(expand.grid(K = 1:3, N = c(1E3, 1E4, 1E5)),                       fit1, cores = 4) utilL1 #>   K     N  Utility #> 1 1 1e+03 13.03225 #> 2 2 1e+03 16.72177 #> 3 3 1e+03 18.21783 #> 4 1 1e+04 14.34826 #> 5 2 1e+04 17.72304 #> 6 3 1e+04 18.92009 #> 7 1 1e+05 15.04591 #> 8 2 1e+05 18.20935 #> 9 3 1e+05 19.23478 settings <- list_cond_L(budget = 875 * 1E3,                         lambda1 = 0.01,                         lambda2 = 5000,                         fit1) utilL2 <- eval_util_L(settings, fit1, cores = 4) utilL2 #>   budget lambda1 lambda2 K          N  Utility #> 1 875000    0.01    5000 1 1250000.00 15.45671 #> 2 875000    0.01    5000 2  375000.00 18.37862 #> 3 875000    0.01    5000 3   83333.33 19.21953 # Use fit0 here since the current version of eval_util_R() does not support # site heterogeneity of occupancy probability. utilR1 <- eval_util_R(expand.grid(J = 1:3, K = 1:3, N = c(1E3, 1E4, 1E5)),                       fit0, cores = 4) utilR1 #>    J K     N  Utility #> 1  1 1 1e+03 13.02089 #> 2  2 1 1e+03 18.75257 #> 3  3 1 1e+03 22.28694 #> 4  1 2 1e+03 16.75038 #> 5  2 2 1e+03 22.84567 #> 6  3 2 1e+03 26.37878 #> 7  1 3 1e+03 18.22010 #> 8  2 3 1e+03 24.50571 #> 9  3 3 1e+03 28.16144 #> 10 1 1 1e+04 14.39106 #> 11 2 1 1e+04 20.38495 #> 12 3 1 1e+04 23.88514 #> 13 1 2 1e+04 17.72739 #> 14 2 2 1e+04 24.01112 #> 15 3 2 1e+04 27.58758 #> 16 1 3 1e+04 18.95701 #> 17 2 3 1e+04 25.38315 #> 18 3 3 1e+04 29.11239 #> 19 1 1 1e+05 14.99955 #> 20 2 1 1e+05 21.19485 #> 21 3 1 1e+05 24.77456 #> 22 1 2 1e+05 18.17301 #> 23 2 2 1e+05 24.54592 #> 24 3 2 1e+05 28.28593 #> 25 1 3 1e+05 19.18010 #> 26 2 3 1e+05 25.78404 #> 27 3 3 1e+05 29.49870 settings <- list_cond_R(budget = 1125 * 1E3,                         lambda1 = 0.01,                         lambda2 = 5000,                         lambda3 = 5000,                         J = seq(5, 50, 5),                         K = 1:4) utilR2 <- eval_util_R(settings, fit0, cores = 4) utilR2 #>     budget lambda1 lambda2 lambda3  J K           N  Utility #> 1  1125000    0.01    5000    5000  5 1 21500000.00 30.10762 #> 2  1125000    0.01    5000    5000 10 1 10250000.00 35.66881 #> 3  1125000    0.01    5000    5000 15 1  6500000.00 38.58941 #> 4  1125000    0.01    5000    5000 20 1  4625000.00 40.54363 #> 5  1125000    0.01    5000    5000 25 1  3500000.00 41.97652 #> 6  1125000    0.01    5000    5000 30 1  2750000.00 43.03573 #> 7  1125000    0.01    5000    5000 35 1  2214285.71 43.86356 #> 8  1125000    0.01    5000    5000 40 1  1812500.00 44.63576 #> 9  1125000    0.01    5000    5000 45 1  1500000.00 45.15320 #> 10 1125000    0.01    5000    5000 50 1  1250000.00 45.60239 #> 11 1125000    0.01    5000    5000  5 2 10500000.00 33.26731 #> 12 1125000    0.01    5000    5000 10 2  4875000.00 38.67689 #> 13 1125000    0.01    5000    5000 15 2  3000000.00 41.48350 #> 14 1125000    0.01    5000    5000 20 2  2062500.00 43.33658 #> 15 1125000    0.01    5000    5000 25 2  1500000.00 44.57691 #> 16 1125000    0.01    5000    5000 30 2  1125000.00 45.48365 #> 17 1125000    0.01    5000    5000 35 2   857142.86 46.19298 #> 18 1125000    0.01    5000    5000 40 2   656250.00 46.72431 #> 19 1125000    0.01    5000    5000 45 2   500000.00 47.16480 #> 20 1125000    0.01    5000    5000 50 2   375000.00 47.46552 #> 21 1125000    0.01    5000    5000  5 3  6833333.33 34.49460 #> 22 1125000    0.01    5000    5000 10 3  3083333.33 39.92865 #> 23 1125000    0.01    5000    5000 15 3  1833333.33 42.70624 #> 24 1125000    0.01    5000    5000 20 3  1208333.33 44.45794 #> 25 1125000    0.01    5000    5000 25 3   833333.33 45.64077 #> 26 1125000    0.01    5000    5000 30 3   583333.33 46.42328 #> 27 1125000    0.01    5000    5000 35 3   404761.90 47.04303 #> 28 1125000    0.01    5000    5000 40 3   270833.33 47.47639 #> 29 1125000    0.01    5000    5000 45 3   166666.67 47.80421 #> 30 1125000    0.01    5000    5000 50 3    83333.33 48.02496 #> 31 1125000    0.01    5000    5000  5 4  5000000.00 35.00271 #> 32 1125000    0.01    5000    5000 10 4  2187500.00 40.55395 #> 33 1125000    0.01    5000    5000 15 4  1250000.00 43.37786 #> 34 1125000    0.01    5000    5000 20 4   781250.00 45.00144 #> 35 1125000    0.01    5000    5000 25 4   500000.00 46.10021 #> 36 1125000    0.01    5000    5000 30 4   312500.00 46.86324 #> 37 1125000    0.01    5000    5000 35 4   178571.43 47.40744 #> 38 1125000    0.01    5000    5000 40 4    78125.00 47.80381"},{"path":"https://fukayak.github.io/occumb/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keiichi Fukaya. Author, maintainer.","code":""},{"path":"https://fukayak.github.io/occumb/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fukaya K (2023). occumb: Site Occupancy Modeling Environmental DNA Metabarcoding. R package version 0.6.1.9000, https://fukayak.github.io/occumb/.","code":"@Manual{,   title = {occumb: Site Occupancy Modeling for Environmental DNA Metabarcoding},   author = {Keiichi Fukaya},   year = {2023},   note = {R package version 0.6.1.9000},   url = {https://fukayak.github.io/occumb/}, }"},{"path":"https://fukayak.github.io/occumb/dev/index.html","id":"occumb-site-occupancy-modeling-for-environmental-dna-metabarcoding","dir":"","previous_headings":"","what":"Site Occupancy Modeling for Environmental DNA Metabarcoding","title":"Site Occupancy Modeling for Environmental DNA Metabarcoding","text":"occumb R package provides functionalities apply multispecies site occupancy modeling environmental DNA (eDNA) metabarcoding easily. package allows users fit model fully Bayesian approach, using conventional formulas R. enables analysis detectability species different stages workflow eDNA metabarcoding inference species site occupancy accounting false negatives. also provides functionality model-based inference assist optimization study design. See package vignette learn use package original paper details model inference.","code":""},{"path":"https://fukayak.github.io/occumb/dev/index.html","id":"important-note","dir":"","previous_headings":"","what":"Important note","title":"Site Occupancy Modeling for Environmental DNA Metabarcoding","text":"current programs alpha version released present concept package development. words, please aware following points want try package: planned features yet implemented. functions may thoroughly tested. Documentation may insufficient. Specifications may change significantly future.","code":""},{"path":"https://fukayak.github.io/occumb/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Site Occupancy Modeling for Environmental DNA Metabarcoding","text":"need first install JAGS following instructions JAGS homepage. can install latest version occumb GitHub repository using install_github() function remotes package:","code":"remotes::install_github(\"fukayak/occumb\", ref = \"main\")"},{"path":"https://fukayak.github.io/occumb/dev/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Site Occupancy Modeling for Environmental DNA Metabarcoding","text":"development occumb possible without, among others, JAGS, developed Martyn Plummer, jagsUI R package, developed Kenneth F. Kellner, relies functionalities libraries model fitting via Markov chain Monte Carlo (MCMC).","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected utility for local species diversity assessments. — eval_util_L","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"eval_util_L() evaluates expected utility local species diversity assessment using Monte Carlo integration.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"","code":"eval_util_L(settings, fit, N_rep = 1, cores = 1L)"},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"settings data frame specifies set conditions utility evaluated. must include column named K N, specifies number replicates per site sequencing depth per replicate, respectively. K N must numeric vectors greater 0. K contains decimal, decimal part discarded treated integer. Additional columns ignored may included. fit occumbFit object containing posterior sample relevant parameters. N_rep Controls sample size Monte Carlo integration. integral evaluated using total N_sample * N_rep random samples, N_sample size MCMC sample provided fit. cores number cores use parallelization.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"data frame column named Utility estimates expected utility stored. obtained adding Utility column data frame provided settings argument.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"utility local species diversity assessment can defined, given set sites, expected number detected species per site (Fukaya et al. 2022). eval_util_L() evaluates utility set sites included occumbFit object (specifically, sites latent occupancy state \\(z\\) estimated) combination K N values specified conditions argument. evaluations can used balance K N maximize utility constant budget (possible combinations K N specified budget cost values easily obtained using list_cond_L(); see example ). also possible examine utility varies different K N values without setting budget level, may useful know satisfactory level K N purely technical point view. expected utility defined expected value conditional utility form: $$U(K, N \\mid \\boldsymbol{r}, \\boldsymbol{u}) = \\frac{1}{J}\\sum_{j = 1}^{J}\\sum_{= 1}^{}\\left\\{1 - \\prod_{k = 1}^{K}\\left(1 - \\frac{u_{ijk}r_{ijk}}{\\sum_{m = 1}^{}u_{mjk}r_{mjk}} \\right)^N \\right\\}$$ \\(u_{ijk}\\) latent indicator variable representing inclusion sequence species \\(\\) replicate \\(k\\) site \\(j\\) \\(r_{ijk}\\) latent variable proportional relative frequency sequence species \\(\\), conditional presence replicate \\(k\\) site \\(j\\) (Fukaya et al. 2022). Expectations taken respect posterior predictive distributions \\(\\boldsymbol{r} = \\{r_{ijk}\\}\\) \\(\\boldsymbol{u} = \\{u_{ijk}\\}\\), evaluated numerically Monte Carlo integration using MCMC samples occumbFit object. Higher approximation accuracy can obtained increasing value N_rep. expected utility evaluated assuming replicates homogeneous sense model parameters associated detection process constant across replicates. reason, current version, eval_util_L() applied supplied occumbFit object contains model replicate covariates. Monte Carlo integration executed parallel multiple CPU cores cores argument controls degree parallelization.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"K. Fukaya, N. . Kondo, S. S. Matsuzaki T. Kadoya (2022) Multispecies site occupancy modelling study design spatially replicated environmental DNA metabarcoding. Methods Ecology Evolution 13:183--193. doi:10.1111/2041-210X.13732","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_L.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected utility for local species diversity assessments. — eval_util_L","text":"","code":"if (FALSE) { # Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  # Fitting a null model fit <- occumb(data = data)  # Estimate expected utility util1 <- eval_util_L(expand.grid(K = 1:3, N = c(1E3, 1E4, 1E5)),                      fit) # Arbitrary K and N values util2 <- eval_util_L(list_cond_L(budget = 1E5,                                  lambda1 = 0.01,                                  lambda2 = 5000,                                  fit),                      fit) # K and N values under specified budget and cost util3 <- eval_util_L(list_cond_L(budget = 1E5,                                  lambda1 = 0.01,                                  lambda2 = 5000,                                  fit,                                  K = 1:5),                      fit) # K values restricted }"},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected utility for regional species diversity assessments. — eval_util_R","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"eval_util_R() evaluates expected utility regional species diversity assessment using Monte Carlo integration.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"","code":"eval_util_R(settings, fit, N_rep = 1, cores = 1L)"},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"settings data frame specifies set conditions utility evaluated. must include column named J, K, N, specifies number sites, number replicates per site, sequencing depth per replicate, respectively. J, K, N must numeric vectors greater 0. J K contains decimal, decimal part discarded treated integer. Additional columns ignored may included. fit occumbFit object containing posterior sample relevant parameters. N_rep Controls sample size Monte Carlo integration. integral evaluated using total N_sample * N_rep random samples, N_sample size MCMC sample provided fit. cores number cores use parallelization.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"data frame column named Utility estimates expected utility stored. obtained adding Utility column data frame provided settings argument.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"utility regional species diversity assessment can defined number species region interest expected detected (Fukaya et al. 2022). eval_util_R() evaluates utility region modeled occumbFit object combination J, K, N values specified conditions argument. evaluations can used balance J, K, N maximize utility constant budget (possible combinations J, K, N specified budget cost values easily obtained using list_cond_R(); see example ). also possible examine utility varies different J, K, N values without setting budget level, may useful know satisfactory level J, K, N purely technical point view. expected utility defined expected value conditional utility form: $$U(J, K, N \\mid \\boldsymbol{r}, \\boldsymbol{u}) = \\sum_{= 1}^{}\\left\\{1 - \\prod_{j = 1}^{J}\\prod_{k = 1}^{K}\\left(1 - \\frac{u_{ijk}r_{ijk}}{\\sum_{m = 1}^{}u_{mjk}r_{mjk}} \\right)^N \\right\\}$$ \\(u_{ijk}\\) latent indicator variable representing inclusion sequence species \\(\\) replicate \\(k\\) site \\(j\\) \\(r_{ijk}\\) latent variable proportional relative frequency sequence species \\(\\), conditional presence replicate \\(k\\) site \\(j\\) (Fukaya et al. 2022). Expectations taken respect posterior predictive distributions \\(\\boldsymbol{r} = \\{r_{ijk}\\}\\) \\(\\boldsymbol{u} = \\{u_{ijk}\\}\\), evaluated numerically Monte Carlo integration using MCMC samples occumbFit object. Higher approximation accuracy can obtained increasing value N_rep. expected utility evaluated assuming sites replicates homogeneous sense model parameters constant across sites replicates. reason, current version, eval_util_R() applied supplied occumbFit object contains model site replicate covariates. Monte Carlo integration executed parallel multiple CPU cores cores argument controls degree parallelization.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"K. Fukaya, N. . Kondo, S. S. Matsuzaki T. Kadoya (2022) Multispecies site occupancy modelling study design spatially replicated environmental DNA metabarcoding. Methods Ecology Evolution 13:183--193. doi:10.1111/2041-210X.13732","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/eval_util_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected utility for regional species diversity assessments. — eval_util_R","text":"","code":"if (FALSE) { # Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  # Fitting a null model fit <- occumb(data = data)  # Estimate expected utility util1 <- eval_util_R(expand.grid(J = 1:3, K = 1:3, N = c(1E3, 1E4, 1E5)),                      fit) # Arbitrary J, K, and N values util2 <- eval_util_R(list_cond_R(budget = 50000,                                  lambda1 = 0.01,                                  lambda2 = 5000,                                  lambda3 = 5000),                      fit) # J, K, and N values under specified budget and cost util3 <- eval_util_R(list_cond_R(budget = 50000,                                  lambda1 = 0.01,                                  lambda2 = 5000,                                  lambda3 = 5000,                                  K = 1:5),                      fit) # K values restricted util4 <- eval_util_R(list_cond_R(budget = 50000,                                  lambda1 = 0.01,                                  lambda2 = 5000,                                  lambda3 = 5000,                                  J = 1:3, K = 1:5),                      fit) # J and K values restricted }"},{"path":"https://fukayak.github.io/occumb/dev/reference/fish.html","id":null,"dir":"Reference","previous_headings":"","what":"Fish eDNA metabarcoding dataset — fish","title":"Fish eDNA metabarcoding dataset — fish","text":"dataset fish eDNA metabarcoding collected Kasumigaura watershed, Japan.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/fish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fish eDNA metabarcoding dataset — fish","text":"","code":"fish"},{"path":"https://fukayak.github.io/occumb/dev/reference/fish.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fish eDNA metabarcoding dataset — fish","text":"occumbData class object containing sequence read count y, mismatch species covariate, riverbank site covariate. mismatch represents total number mismatched bases priming region forward reverse primers species. riverbank indicates whether riverbank site lacks aquatic riparian vegetation. sequence reads obtained three replicates (collected center river near left right riverbanks, respectively) 50 sites across watershed, read counts 6 samples missing. resulting sequence counts 50 freshwater fish taxa detected recorded.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/fish.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fish eDNA metabarcoding dataset — fish","text":"K. Fukaya, N. . Kondo, S. S. Matsuzaki, T. Kadoya (2021) Data : Multispecies site occupancy modeling study design spatially replicated environmental DNA metabarcoding. Dryad Digital Repository. doi:10.5061/dryad.3bk3j9kkm","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/fish_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Fish eDNA metabarcoding dataset — fish_raw","title":"Fish eDNA metabarcoding dataset — fish_raw","text":"dataset fish eDNA metabarcoding collected Kasumigaura watershed, Japan.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/fish_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fish eDNA metabarcoding dataset — fish_raw","text":"","code":"fish_raw"},{"path":"https://fukayak.github.io/occumb/dev/reference/fish_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fish eDNA metabarcoding dataset — fish_raw","text":"list containing array sequence read count y, vector total number mismatched bases priming region forward reverse primers species mismatch, factor indicating whether riverbank site lacks aquatic riparian vegetation riverbank. sequence reads obtained three replicates (collected center river near left right riverbanks, respectively) 50 sites across watershed, read counts 6 samples missing. resulting sequence counts 50 freshwater fish taxa detected recorded.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/fish_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fish eDNA metabarcoding dataset — fish_raw","text":"K. Fukaya, N. . Kondo, S. S. Matsuzaki, T. Kadoya (2021) Data : Multispecies site occupancy modeling study design spatially replicated environmental DNA metabarcoding. Dryad Digital Repository. doi:10.5061/dryad.3bk3j9kkm","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"get_post_samples() extracts posterior samples specified parameters model-fit object. get_post_summary() extracts posterior summary specified parameters model-fit object.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"","code":"get_post_samples(   fit,   parameter = c(\"z\", \"pi\", \"phi\", \"theta\", \"psi\", \"alpha\", \"beta\", \"gamma\",     \"alpha_shared\", \"beta_shared\", \"gamma_shared\", \"Mu\", \"sigma\", \"rho\") )  get_post_summary(   fit,   parameter = c(\"z\", \"pi\", \"phi\", \"theta\", \"psi\", \"alpha\", \"beta\", \"gamma\",     \"alpha_shared\", \"beta_shared\", \"gamma_shared\", \"Mu\", \"sigma\", \"rho\") )"},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"fit occumbFit object. parameter string parameter name. See Details possible choices corresponding parameters.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"get_post_samples() returns vector, matrix, array posterior samples selected parameter. get_post_summary() returns table (matrix) posterior summary selected parameter. elements posterior summary obtained jags() function jagsUI package: include mean, standard deviation, percentiles posterior samples; Rhat statistic; effective sample size, n.eff; overlap0 checks 0 falls parameter's 95% credible interval; proportion posterior sign mean, f. dimension label attributes output object give information dimension parameter.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"functions return posterior samples summary one following parameters model, stored model-fit object fit: \"z\" Site occupancy status species. \"pi\" Multinomial probabilities species sequence read counts. \"phi\" Sequence relative dominance species. \"theta\" Sequence capture probabilities species. \"psi\" Site occupancy probabilities species. \"alpha\" Species-specific effects sequence relative dominance (phi). \"beta\" Species-specific effects sequence capture probabilities (theta). \"gamma\" Species-specific effects site occupancy probabilities (psi). \"alpha_shared\" Effects sequence relative dominance (phi) common across species. \"beta_shared\" Effects sequence capture probabilities (theta) common across species. \"gamma_shared\" Effects site occupancy probabilities (psi) common across species. \"Mu\" Community-level averages species-specific effects (alpha, beta, gamma). \"sigma\" Standard deviations species-specific effects (alpha, beta, gamma). \"rho\" Correlation coefficients species-specific effects (alpha, beta, gamma). See package vignette details parameters. parameter may dimensions corresponding species, sites, replicates, effects (covariates): dimension label attributes added output object inform dimensions. sequence read count data y species, site, replicate names appended dimnames attribute (see Details occumbData()), copied label attribute returned object.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/get_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract posterior samples or summary of parameters from a model-fit object. — get_posterior","text":"","code":"if (FALSE) { # Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates y_named <- array(sample.int(I * J * K), dim = c(I, J, K)) dimnames(y_named) <- list(c(\"common species\", \"uncommon species\"),                           c(\"good site\", \"bad site\"), NULL) data_named <- occumbData(     y = y_named,     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  # Fitting a null model fit <- occumb(data = data_named)  # Extract posterior samples (post_sample_z <- get_post_samples(fit, \"z\")) # Look dimensions of the parameter attributes(post_sample_z)  # Extract posterior summary (post_summary_z <- get_post_summary(fit, \"z\")) # Look dimensions of the parameter attributes(post_summary_z) }"},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodness-of-fit assessment of the fitted model. — gof","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"gof() calculates omnibus discrepancy measures Bayesian \\(p\\)-values fitted model using posterior predictive check approach.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"","code":"gof(fit, stats = c(\"Freeman_Tukey\", \"deviance\"), cores = 1L, plot = TRUE)"},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"fit occumbFit object. stats discrepancy statistics applied. cores number cores use parallelization. plot Logical, determine draw scatter plots fit statistics.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"list following named elements: stats discrepancy statistics applied. p_value Bayesian \\(p\\)-value. stats_obs Discrepancy statistics observed data. stats_rep Discrepancy statistics repeated data.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"discrepancy statistic fitted model obtained using procedure posterior predictive checking. following statistics currently available: Freeman-Tukey statistics (default) \\(T(\\boldsymbol{y}, \\boldsymbol{\\theta}) = \\sum_{}\\sum_{j}\\sum_{k}\\left(\\sqrt{y_{ijk}} - \\sqrt{E(y_{ijk} \\mid \\boldsymbol{\\theta})}\\right)^2\\) Deviance statistics \\(T(\\boldsymbol{y}, \\boldsymbol{\\theta}) = -2 \\log p(\\boldsymbol{y} \\mid \\boldsymbol{\\theta})\\) \\(\\boldsymbol{y} = \\{y_{ijk}\\}\\), \\(\\boldsymbol{\\theta}\\), \\(E(y_{ijk} \\mid \\boldsymbol{\\theta})\\), \\(\\log p(\\boldsymbol{y} \\mid \\boldsymbol{\\theta})\\) sequence read count data, parameters latent variables model, expected value data conditional \\(\\boldsymbol{\\theta}\\), log-likelihood model, respectively. Bayesian \\(p\\)-value estimated probability value discrepancy statistics replicated dataset extreme observed dataset. extreme Bayesian \\(p\\)-value may indicate inadequate model fit. See, e.g., Gelman et al. (2014), Kéry Royle (2016), Conn et al. (2018) details procedures posterior predictive checking. Computations can run parallel multiple CPU cores cores argument controls degree parallelization.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"P. B. Conn, D. S. Johnson, P. J. Williams, S. R. Melin M. B. Hooten. (2018) guide Bayesian model checking ecologists. Ecological Monographs 88:526--542. doi:10.1002/ecm.1314 . Gelman, J. B. Carlin, H. S. Stern D. B. Dunson, . Vehtari D. B. Rubin (2013) Bayesian Data Analysis. 3rd edition. Chapman Hall/CRC. http://www.stat.columbia.edu/~gelman/book/ M. Kéry J. . Royle (2016) Applied Hierarchical Modeling Ecology --- Analysis Distribution, Abundance Species Richness R BUGS. Volume 1: Prelude Static Models. Academic Press. https://www.mbr-pwrc.usgs.gov/pubanalysis/keryroylebook/","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/gof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodness-of-fit assessment of the fitted model. — gof","text":"","code":"if (FALSE) { # Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  # Fitting a null model fit <- occumb(data = data)  # Goodness-of-fit assessment gof_result <- gof(fit) gof_result$p_value  # print p-value }"},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditions for local assessment under certain budget and cost values. — list_cond_L","title":"Conditions for local assessment under certain budget and cost values. — list_cond_L","text":"list_cond_L() constructs list possible local species diversity assessment conditions specified budget cost values.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditions for local assessment under certain budget and cost values. — list_cond_L","text":"","code":"list_cond_L(budget, lambda1, lambda2, fit, K = NULL)"},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditions for local assessment under certain budget and cost values. — list_cond_L","text":"budget numeric specifying amount budget. Use currency unit consistent lambda1 lambda2. lambda1 numeric specifying cost per sequence read high-throughput sequencing. Use currency unit consistent budget lambda2. lambda2 numeric specifying cost per replicate library preparation. Use currency unit consistent budget lambda1. fit occumbFit object. K optional vector manually specifying number replicates.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditions for local assessment under certain budget and cost values. — list_cond_L","text":"data frame containing columns named budget, lambda1, lambda2, K, N.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_L.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditions for local assessment under certain budget and cost values. — list_cond_L","text":"function can generate data frame object given settings argument eval_util_L(); see Examples eval_util_L(). default, outputs list feasible combinations values number replicates per site K sequencing depth per replicate N, based given budget cost values number sites (identified reference fit object). resulting N can non-integer calculated simply assuming can obtain maximum value. want obtain list subset possible K values given budget cost values, use K argument provide vector desired K values.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","title":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","text":"list_cond_R() constructs list possible regional species diversity assessment conditions specified budget cost values.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","text":"","code":"list_cond_R(budget, lambda1, lambda2, lambda3, J = NULL, K = NULL)"},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","text":"budget numeric specifying amount budget. Use currency unit consistent lambda1, lambda2, lambda3. lambda1 numeric specifying cost per sequence read high-throughput sequencing. Use currency unit consistent budget, lambda2, lambda3. lambda2 numeric specifying cost per replicate library preparation. Use currency unit consistent budget, lambda1, lambda3. lambda3 numeric specifying visiting cost per site. Use currency unit consistent budget, lambda1, lambda2. J optional vector manually specifying number sites K optional vector manually specifying number replicates. computational convenience, K values must ascending order.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","text":"data frame containing columns named budget, lambda1, lambda2, , lambda3, J, K, N.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/list_cond_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditions for regional assessment under certain budget and cost values. — list_cond_R","text":"function can generate data frame object given settings argument eval_util_R(); see Examples eval_util_R(). default, outputs list feasible combinations values number sites J, number replicates per site K, sequencing depth per replicate N, based given budget cost values. resulting N can non-integer calculated simply assuming can obtain maximum value. want obtain list subset possible values J K given budget cost values, use J /K arguments (fact, recommended relatively small number K values specified using K argument list conditions achievable moderate budget cost values can huge, rarely practical vast number replicates per site). given combination J K values feasible specified budget cost values, combination ignored excluded output.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Pointwise log-likelihood of the fitted model. — loglik","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"loglik() extracts pointwise log-likelihood matrix occumbFit object.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"","code":"loglik(fit)"},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"fit occumbFit object.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"three-dimensional array pointwise log-likelihood, first dimension represents number MCMC iterations per chain, second number chains, last number eDNA samples (.e., replicates).","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"pointwise log-likelihood log-likelihood data point evaluated posterior samples parameter values. can used obtain criteria model comparisons, including WAIC PSIS-LOO. can conveniently calculated applying functions loo package output loglik function: see Vehtari et al. (2017) documentation loo package details.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pointwise log-likelihood of the fitted model. — loglik","text":". Vehtari, . Gelman, J. Gabry (2017) Practical Bayesian model evaluation using leave-one-cross-validation WAIC. Statistics Computing, 27, 1413--1432. doi:10.1007/s11222-016-9696-4","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pointwise log-likelihood of the fitted model. — loglik","text":"","code":"if (FALSE) { # Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  # Fitting a null model fit <- occumb(data = data)  # Extract log-likelihood ll <- loglik(fit)  # could be passed to loo() or waic() in the loo package }"},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":null,"dir":"Reference","previous_headings":"","what":"Model-fitting function. — occumb","title":"Model-fitting function. — occumb","text":"occumb() fits multispecies site-occupancy model eDNA metabarcoding (Fukaya et al. 2022) returns model-fit object containing posterior samples.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model-fitting function. — occumb","text":"","code":"occumb(   formula_phi = ~1,   formula_theta = ~1,   formula_psi = ~1,   formula_phi_shared = ~1,   formula_theta_shared = ~1,   formula_psi_shared = ~1,   prior_prec = 1e-04,   prior_ulim = 10000,   data,   n.chains = 4,   n.adapt = NULL,   n.burnin = 10000,   n.thin = 10,   n.iter = 20000,   parallel = FALSE,   ... )"},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model-fitting function. — occumb","text":"formula_phi right-hand side formula describing species-specific effects sequence relative dominance (\\(\\phi\\)). formula_theta right-hand side formula describing species-specific effects sequence capture probability (\\(\\theta\\)). formula_psi right-hand side formula describing species-specific effects occupancy probability (\\(\\psi\\)). formula_phi_shared right-hand side formula describing effects sequence relative dominance (\\(\\phi\\)) common across species. intercept term ignored (see Details). formula_theta_shared right-hand side formula describing effects sequence capture probability (\\(\\theta\\)) common across species. intercept term ignored (see Details). formula_psi_shared right-hand side formula describing effects occupancy probability (\\(\\psi\\)) common across species. intercept term ignored (see Details). prior_prec Precision normal prior distribution community-level average species-specific parameters effects common across species. prior_ulim Upper limit uniform prior distribution standard deviation species-specific parameters. data dataset supplied occumbData class object. n.chains Number Markov chains run. n.adapt Number iterations run JAGS adaptive phase. n.burnin Number iterations beginning chain discard. n.thin Thinning rate. Must positive integer. n.iter Total number iterations per chain (including burn-). parallel TRUE, run MCMC chains parallel multiple CPU cores. ... Additional arguments passed jags() function.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model-fitting function. — occumb","text":"S4 object occumbFit class containing results model fitting supplied dataset.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model-fitting function. — occumb","text":"occumb() allows fitting range multispecies site occupancy models including covariates different levels data generation process. general form model can written follows: Sequence read counts: $$(y_{1jk}, ..., y_{Ijk}) \\sim \\textrm{Multinomial}((\\pi_{1jk}, ...,  \\pi_{Ijk}), N_{jk}),$$ $$\\pi_{ijk} = \\frac{u_{ijk}r_{ijk}}{\\sum_m u_{mjk}r_{mjk}},$$ Relative frequency species sequences: $$r_{ijk} \\sim \\textrm{Gamma}(\\phi_{ijk}, 1),$$ Capture species sequences: $$u_{ijk} \\sim \\textrm{Bernoulli}(z_{ij}\\theta_{ijk}),$$ Site occupancy species: $$z_{ij} \\sim \\textrm{Bernoulli}(\\psi_{ij}),$$ variations \\(\\phi\\), \\(\\theta\\), \\(\\psi\\) modeled specifying model formulas formula_phi, formula_theta, formula_psi, formula_phi_shared, formula_theta_shared, formula_psi_shared. parameter may species-specific effects effects common across species, former specified formula_phi, formula_theta, formula_psi, formula_phi_shared, formula_theta_shared, formula_psi_shared specify latter. species-specific intercepts specified default, intercept term formula_phi_shared, formula_theta_shared, formula_psi_shared always ignored. covariate terms must found names list elements stored spec_cov, site_cov, repl_cov slots dataset object provided data argument. Covariates modeled using log link function \\(\\phi\\) logit link function \\(\\theta\\) \\(\\psi.\\) two arguments, prior_prec prior_ulim, control prior distribution parameters. community-level average species-specific effects effects common across species, normal prior distribution mean 0 precision (.e., inverse variance) prior_prec specified. standard deviation species-specific effects, uniform prior distribution lower limit 0 upper limit prior_ulim specified. correlation coefficient species-specific effects, uniform prior distribution range \\(-\\)1 1 specified default. Also see package vignette details model specification occumb(). data argument requires dataset object generated using ocumbData(): see document occumbData(). model fit via jags() function jagsUI package, Markov chain Monte Carlo methods used obtain posterior samples parameters latent variables. Arguments n.chains, n.adapt, n.burnin, n.thin, n.iter, parallel passed argument name jags() function. See document jagsUI's jags() function details.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model-fitting function. — occumb","text":"K. Fukaya, N. . Kondo, S. S. Matsuzaki T. Kadoya (2022) Multispecies site occupancy modelling study design spatially replicated environmental DNA metabarcoding. Methods Ecology Evolution 13:183--193. doi:10.1111/2041-210X.13732","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model-fitting function. — occumb","text":"","code":"# Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J),                     cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)))  if (FALSE) { # Fitting a null model (includes only species-specific intercepts) res0 <- occumb(data = data)  # Add species-specific effects of site covariates in occupancy probabilities res1 <- occumb(formula_psi = ~ cov2, data = data)        # Continuous covariate res2 <- occumb(formula_psi = ~ cov3, data = data)        # Categorical covariate res3 <- occumb(formula_psi = ~ cov2 * cov3, data = data) # Interaction  # Add species covariate in the three parameters # Note that species covariates are modeled as common effects res4 <- occumb(formula_phi_shared = ~ cov1, data = data)   # phi res5 <- occumb(formula_theta_shared = ~ cov1, data = data) # theta res6 <- occumb(formula_psi_shared = ~ cov1, data = data)   # psi  # Add replicate covariates # Note that replicate covariates can only be specified for theta and phi res7 <- occumb(formula_phi = ~ cov4, data = data)   # phi res8 <- occumb(formula_theta = ~ cov4, data = data) # theta  # Specify the prior distribution and MCMC settings explicitly res9 <- occumb(data = data, prior_prec = 1E-2, prior_ulim = 1E2,                n.chains = 1, n.burnin = 1000, n.thin = 1, n.iter = 2000) res10 <- occumb(data = data, parallel = TRUE) # Run MCMC in parallel }"},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for occumbData data class. — occumbData","title":"Constructor for occumbData data class. — occumbData","text":"occumbData() creates data list compatible model-fitting function occumb().","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for occumbData data class. — occumbData","text":"","code":"occumbData(y, spec_cov = NULL, site_cov = NULL, repl_cov = NULL)"},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for occumbData data class. — occumbData","text":"y 3-D array sequence read counts (integer values) may dimnames attribute. Dimensions ordered species, site, replicate. Data missing replicates must represented zero vectors. NAs allowed. spec_cov named list species covariates. element must vector numeric, factor, character whose length equal dim(y)[1] (.e., number species). Characters automatically converted factors. NAs allowed. site_cov named list site covariates. element must vector numeric, factor, character whose length equal dim(y)[2] (.e., number sites). Characters automatically converted factors. NAs allowed. repl_cov named list replicate covariates. element must matrix numeric, factor, character whose dimension equal dim(y)[2:3] (.e., number sites \\(\\times\\) number replicates). Characters automatically converted factors. NAs allowed.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for occumbData data class. — occumbData","text":"S4 object occumbData class.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor for occumbData data class. — occumbData","text":"element names spec_cov, site_cov, repl_cov must unique. y dimnames attribute, retained resulting occumbData object can referenced subsequent analyses.","code":""},{"path":"https://fukayak.github.io/occumb/dev/reference/occumbData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for occumbData data class. — occumbData","text":"","code":"# Generate the smallest random dataset (2 species * 2 sites * 2 reps) I <- 2 # Number of species J <- 2 # Number of sites K <- 2 # Number of replicates data <- occumbData(     y = array(sample.int(I * J * K), dim = c(I, J, K)),     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J), cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)) )  # A case for named y (with species and site names) y_named <- array(sample.int(I * J * K), dim = c(I, J, K)) dimnames(y_named) <- list(c(\"common species\", \"uncommon species\"),                           c(\"good site\", \"bad site\"), NULL) data_named <- occumbData(     y = y_named,     spec_cov = list(cov1 = rnorm(I)),     site_cov = list(cov2 = rnorm(J), cov3 = factor(1:J)),     repl_cov = list(cov4 = matrix(rnorm(J * K), J, K)) )  # A real data example data(fish_raw) fish <- occumbData(     y = fish_raw$y,     spec_cov = list(mismatch = fish_raw$mismatch),     site_cov = list(riverbank = fish_raw$riverbank) )  # Get an overview of the datasets if (FALSE) { summary(data) summary(data_named) summary(fish) }"},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-development-version","dir":"Changelog","previous_headings":"","what":"occumb (development version)","title":"occumb (development version)","text":"get_post_summary() get_post_samples() omit unused elements rho. Fixed errors specifying /else.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-061-20230727","dir":"Changelog","previous_headings":"","what":"occumb 0.6.1 (2023/07/27)","title":"occumb 0.6.1 (2023/07/27)","text":"Add model specification vignette. fixes improvements documentation.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v060-20230720","dir":"Changelog","previous_headings":"","what":"occumb v0.6.0 (2023/07/20)","title":"occumb v0.6.0 (2023/07/20)","text":"Add package vignette. Add fish fish_raw data. Add occumbGof class. Add fix methods occumbData, occumbFit, occumbGof classes. Change defaults cores arguments gof(), eval_util_L(), eval_util_R() functions. bug fixes, internal changes, documentation improvements.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v051-20230427","dir":"Changelog","previous_headings":"","what":"occumb v0.5.1 (2023/04/27)","title":"occumb v0.5.1 (2023/04/27)","text":"Add pkgdown website. bug fixes internal changes.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v050-20230426","dir":"Changelog","previous_headings":"","what":"occumb v0.5.0 (2023/04/26)","title":"occumb v0.5.0 (2023/04/26)","text":"Add get_post_samples() get_post_summary() functions. Add option parallel computation gof() function. Fix bugs occumb() functions. Fix issue parall computation eval_util_L() eval_util_R() functions Windows.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v042-20221213","dir":"Changelog","previous_headings":"","what":"occumb v0.4.2 (2022/12/13)","title":"occumb v0.4.2 (2022/12/13)","text":"Fix issue parallel computation eval_util_L() eval_util_R() functions Windows.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v041-20221116","dir":"Changelog","previous_headings":"","what":"occumb v0.4.1 (2022/11/16)","title":"occumb v0.4.1 (2022/11/16)","text":"Fix computational issues eval_util_L() eval_util_R() functions.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v040-20220603","dir":"Changelog","previous_headings":"","what":"occumb v0.4.0 (2022/06/03)","title":"occumb v0.4.0 (2022/06/03)","text":"Add eval_util_L() eval_util_R() functions. Add list_cond_L() list_cond_R() functions.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v030-20220331","dir":"Changelog","previous_headings":"","what":"occumb v0.3.0 (2022/03/31)","title":"occumb v0.3.0 (2022/03/31)","text":"Add gof() function. Add loglik() function. Add ... argument occumb() function. Add data field occumbFit class.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v021-20211121","dir":"Changelog","previous_headings":"","what":"occumb v0.2.1 (2021/11/21)","title":"occumb v0.2.1 (2021/11/21)","text":"bug fixes. Add validations inputs occumb().","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v020-20211119","dir":"Changelog","previous_headings":"","what":"occumb v0.2.0 (2021/11/19)","title":"occumb v0.2.0 (2021/11/19)","text":"Change occumbData class specification occumbData() function. Add occumb() function. Add methods occumbFit class: plot, print, summary.","code":""},{"path":"https://fukayak.github.io/occumb/dev/news/index.html","id":"occumb-v010-2021910","dir":"Changelog","previous_headings":"","what":"occumb v0.1.0 (2021/9/10)","title":"occumb v0.1.0 (2021/9/10)","text":"Initial development occumb package. Add occumbData() function.","code":""}]
